name: teste ze
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on: [push]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Maven Verify
        run: mvn clean compile

  HealthCheck:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.0
        with:
          distribution: 'oracle'
          java-version: 17

      - name: Build com Maven
        run: mvn -B package --file pom.xml

      - name: Executar teste de Health check
        run: mvn test -Dtest=UsuariosGetTest#testListarUsuariosComSucesso

  Contrato:
    runs-on: ubuntu-latest
    needs: HealthCheck
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.0
        with:
          distribution: 'oracle'
          java-version: 17

      - name: Executar teste de contrato de listar usuario
        run: mvn test -Dtest=UsuariosGetTest#testListarUsuariosComSucesso

      - name: Executar teste de contrato de atualizar usuario
        run: mvn test -Dtest=UsuariosPutTest#testAtualizarUsuarioComSucessoSchema

      - name: Executar teste de contrato de login
        run: mvn test -Dtest=LoginTest#testLogarComSucessoSchemas

  Funcional:
    runs-on: ubuntu-latest
    needs: Contrato
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.0
        with:
          distribution: 'oracle'
          java-version: 17

      - name: Executar teste funcionais
        run: mvn clean test

      - run: echo "🍏 This job's status is ${{ job.status }}."

  Reports:
    runs-on: ubuntu-latest
    needs: [ Build, HealthCheck, Contrato, Funcional ]
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.0
        with:
          distribution: 'oracle'
          java-version: 17

      - name: Carregar histórico do relatório de testes
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Construir relatório de testes Allure
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results

      - name: Publicar relatório de testes
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          personal_token: ${{ secrets.PAT_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Configurar Git para o GitHub Pages
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Clonar gh-pages
        run: |
          git clone --single-branch --branch gh-pages https://github.com/${{ github.repository }}.git gh-pages || mkdir gh-pages

      - name: Copiar relatório para gh-pages
        run: |
          cp -r allure-history/* gh-pages/

      - name: Publicar relatório no GitHub Pages
        run: |
          cd gh-pages
          git add .
          git commit -m "Atualizando relatório Allure [skip ci]" || echo "Nada para atualizar"
          git push origin gh-pages