name: API Test Pipeline with Allure Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  api-tests:
    runs-on: ubuntu-latest  # Usando a máquina virtual mais recente do Ubuntu para rodar o pipeline

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Faz o checkout do código do repositório

      - name: Set up JDK 17
        uses: actions/setup-java@v2  # Ação para configurar o JDK
        with:
          java-version: '17'  # Define a versão do JDK para 17
          distribution: 'openjdk'  # Usa a distribuição OpenJDK

      - name: Cache Maven dependencies
        uses: actions/cache@v2  # Ação para cache de dependências do Maven
        with:
          path: ~/.m2/repository  # Caminho do cache de dependências
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Chave do cache baseada no hash dos arquivos POM
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install  # Instala as dependências do projeto

      - name: Run API Tests
        run: mvn clean test  # Executa os testes

      - name: Generate Allure Report
        run: mvn allure:report  # Gera o relatório do Allure

      - name: Serve Allure Report
        run: mvn allure:serve &  # Serve o relatório do Allure para visualização

      - name: Upload Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3  # Usando a ação para publicar no GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Usando o token do GitHub para autenticação
          publish_dir: target/site/allure-maven-plugin  # Caminho do diretório gerado pelo Allure para publicação no GitHub Pages
